
let List/foldl = ./foldl

in    λ(a : Type)
    → λ(i : a)
    → λ(l : List a)
    → let List/steppable = ./steppable
      
      in  merge
          { Both =
                λ(both : { head : a, tail : List a })
              → let f = λ(xs : List a) → λ(x : a) → xs # [ i, x ]
                
                in  List/foldl a both.tail (List a) f [ both.head ]
          , Neither =
              λ(_ : {}) → [] : List a
          }
          ((List/steppable a).project l)
