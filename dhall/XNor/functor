let XNor = ./Type

in  let Functor = ../Functor/Type
    
    in    λ(a : Type)
        →   { map =
                  λ(b : Type)
                → λ(c : Type)
                → λ(f : b → c)
                → λ(fa : XNor a b)
                → merge
                  { Both =
                        λ(xn : { head : a, tail : b })
                      → (XNor a c).Both { head = xn.head, tail = f xn.tail }
                  , Neither =
                      (XNor a c).Neither
                  }
                  fa
            }
          : Functor (XNor a)
