let Tree = ./Type

let List/map = ../List/map

in    λ(t : Type)
    → λ(data : t)
    → λ(children : List (Tree t))
    → λ(a : Type)
    → λ(f : { data : t, subtrees : List a } → a)
    → let fx = λ(t : Tree t) → t a f
      
      in  f { data = data, subtrees = List/map (Tree t) a fx children }
